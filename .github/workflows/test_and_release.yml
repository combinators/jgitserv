name: Test code, update coverage, and release master branch

on: [ push, pull_request ]
env:
  EXTRA_SBT_OPTS: -Dsbt.boot.lock=false

jobs:
  test:
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
        java: [ 8, 11, 13 ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK, Scala, and SBT
      uses: olafurpg/setup-scala@v5
      with:
        java-version: adopt@1.${{ matrix.java }}
    - name: Run tests
      shell: bash
      run: sbt $EXTRA_SBT_OPTS +test
  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK, Scala, and SBT
      uses: olafurpg/setup-scala@v5
      with:
        java-version: adopt@1.13
    - name: Analyze coverage
      run: sbt $EXTRA_SBT_OPTS clean coverage +test
    - name: Update coverage report 
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      run: sbt $EXTRA_SBT_OPTS coverageReport coveralls
  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: [ test, coverage ]
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK, Scala, and SBT
      uses: olafurpg/setup-scala@v5
      with:
        java-version: adopt@1.11
    - name: Build and release
      env:
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        GPG_PRIVATE: ${{ secrets.GPG_PRIVATE }}
        PGP_PASS: ${{ secrets.PGP_PASS }}
        CI: github
      run: |
        export GPG_TTY=$(tty) &&
        echo $GPG_PRIVATE | base64 -d | gpg --passphrase=$PGP_PASS --yes --batch --pinentry-mode loopback --import &&
        export PATH=`pwd`/.github/bin:$PATH &&
        sbt $EXTRA_SBT_OPTS +releaseEarly sonatypeBundleRelease


    
